//build-docs:
    mkdocs build
    cp docs/changelog.md CHANGELOG.md
    cd docs
    ../devtools/common/replace-placeholders.py index.md ../README.md

//serve-docs:
    mkdocs serve

deploy-docs: //build-docs
    mkdocs gh-deploy

add-changelog:
    tmp_changelog=/tmp/changelog.md
    changelog_file=docs/changelog.md
    message="${m}"

    if sed -n 3p docs/changelog.md | grep UNRELEASED >/dev/null; then
        first_lines=4
    else
        first_lines=2
    fi

    echo -e "## CHANGELOG\n" > ${tmp_changelog}
    echo -e "### UNRELEASED\n" >> ${tmp_changelog}
    echo "${message}" | sed -r -e 's/(; ?)/\n/g' | sed -r -e 's/^/ - /g' >> ${tmp_changelog}
    tail -n +${first_lines} ${changelog_file} >> ${tmp_changelog}
    mv ${tmp_changelog} ${changelog_file}
    bake //build-docs

create-release-minor:
    create-release minor

create-release-patch:
    create-release patch

create-release-major:
    create-release major

create-release() {
    version_type=${1}

    git fetch origin
    if [ $(git diff origin/master | wc -l) -eq 0 ]; then
        git checkout master
        git pull
        bumpversion ${version_type} --dry-run --no-commit --list | \
            grep new_version= | sed -e 's/new_version=//' | \
            changelog-add-release
        git commit -am 'Update CHANGELOG'
        echo $(bumpversion ${version_type} --dry-run --no-commit --list)
        echo $(bumpversion ${version_type})
        echo -e "\nChangelog and version updated successfully"
    else
        echo -e "\nERROR: Please, merge on master or clean your git changes"
        exit 1
    fi
}

changelog-add-release() {
    changelog_file=docs/changelog.md
    read version
    sed -i -r -e "s/UNRELEASED/${version} - $(date +%Y-%m-%d)/" ${changelog_file}
    bake //build-docs
}

push-release:
    git push
    git push --tags
